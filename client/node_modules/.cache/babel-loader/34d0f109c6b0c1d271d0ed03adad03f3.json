{"ast":null,"code":"var _jsxFileName = \"/Users/emmanuel/my-portfolio/src/components/TextArea/TextArea.tsx\",\n    _s = $RefreshSig$();\n\n/** @format */\n// /**\n//  * eslint-disable @typescript-eslint/no-unused-vars\n//  *\n//  * @format\n//  */\n// /**\n//  * eslint-disable @typescript-eslint/no-unused-vars\n//  *\n//  * @format\n//  */\n// /**\n//  * eslint-disable @typescript-eslint/no-unused-vars\n//  *\n//  * @format\n//  */\n// /** @format */\n// import { ThemeContext } from '../../App';\n// import { useContext, useState } from 'react';\n// import { useTextAreaStyles } from './styles';\n// import { TextareaAutosize } from '@material-ui/core';\n// interface TextAreaProps {\n// \tlabel: string; // Define the type of the label prop\n// \tonChange: (event: React.ChangeEvent<HTMLTextAreaElement>) => void;\n// \tvalue: string;\n// }\n// const TextArea = ({ label }: TextAreaProps) => {\n// \tconst [value, setValue] = useState('');\n// \tconst classes = useTextAreaStyles();\n// \tconst theme = useContext(ThemeContext);\n// \tconst handleChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n// \t\tsetValue(event.target.value); // Update value state when textarea content changes\n// \t};\n// \tconst handlChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n// \t\tsetValue(event.target.value); // Update value state when textarea content changes\n// \t};\n// \treturn (\n// \t\t<section className={classes.root}>\n// \t\t\t{label && <label>{label}</label>}\n// \t\t\t<form className={classes.form}>\n// \t\t\t\t<TextareaAutosize\n// \t\t\t\t\tclassName={classes.textArea}\n// \t\t\t\t\tonChange={handleChange}\n// \t\t\t\t\tvalue={value}\n// \t\t\t\t/>\n// \t\t\t\t<TextareaAutosize\n// \t\t\t\t\tclassName={classes.textArea}\n// \t\t\t\t\tonChange={handlChange}\n// \t\t\t\t\tvalue={value}\n// \t\t\t\t/>\n// \t\t\t\t<TextareaAutosize\n// \t\t\t\t\tclassName={classes.textArea}\n// \t\t\t\t\tonChange={handleChange}\n// \t\t\t\t\tvalue={value}\n// \t\t\t\t\tstyle={{ height: '530px' }}\n// \t\t\t\t/>\n// \t\t\t</form>\n// \t\t</section>\n// \t);\n// };\n// export default TextArea;\nimport { useContext } from 'react';\nimport { useTextAreaStyles } from './styles';\nimport { ThemeContext } from '../../App';\nimport { TextareaAutosize } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TextArea = _ref => {\n  _s();\n\n  let {\n    label,\n    onChange,\n    value\n  } = _ref;\n  const classes = useTextAreaStyles();\n  const theme = useContext(ThemeContext);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.root,\n    children: [label && /*#__PURE__*/_jsxDEV(\"label\", {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n        className: classes.textArea,\n        onChange: onChange,\n        value: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 3\n  }, this);\n};\n\n_s(TextArea, \"8NG5qcCWwsJO0MgG7/YZKBxuKPQ=\", false, function () {\n  return [useTextAreaStyles];\n});\n\n_c = TextArea;\nexport default TextArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextArea\");","map":{"version":3,"names":["useContext","useTextAreaStyles","ThemeContext","TextareaAutosize","TextArea","label","onChange","value","classes","theme","root","textArea"],"sources":["/Users/emmanuel/my-portfolio/src/components/TextArea/TextArea.tsx"],"sourcesContent":["/** @format */\n\n// /**\n//  * eslint-disable @typescript-eslint/no-unused-vars\n//  *\n//  * @format\n//  */\n\n// /**\n//  * eslint-disable @typescript-eslint/no-unused-vars\n//  *\n//  * @format\n//  */\n\n// /**\n//  * eslint-disable @typescript-eslint/no-unused-vars\n//  *\n//  * @format\n//  */\n\n// /** @format */\n\n// import { ThemeContext } from '../../App';\n// import { useContext, useState } from 'react';\n// import { useTextAreaStyles } from './styles';\n// import { TextareaAutosize } from '@material-ui/core';\n\n// interface TextAreaProps {\n// \tlabel: string; // Define the type of the label prop\n// \tonChange: (event: React.ChangeEvent<HTMLTextAreaElement>) => void;\n// \tvalue: string;\n// }\n\n// const TextArea = ({ label }: TextAreaProps) => {\n// \tconst [value, setValue] = useState('');\n// \tconst classes = useTextAreaStyles();\n// \tconst theme = useContext(ThemeContext);\n\n// \tconst handleChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n// \t\tsetValue(event.target.value); // Update value state when textarea content changes\n// \t};\n// \tconst handlChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n// \t\tsetValue(event.target.value); // Update value state when textarea content changes\n// \t};\n// \treturn (\n// \t\t<section className={classes.root}>\n// \t\t\t{label && <label>{label}</label>}\n// \t\t\t<form className={classes.form}>\n// \t\t\t\t<TextareaAutosize\n// \t\t\t\t\tclassName={classes.textArea}\n// \t\t\t\t\tonChange={handleChange}\n// \t\t\t\t\tvalue={value}\n// \t\t\t\t/>\n// \t\t\t\t<TextareaAutosize\n// \t\t\t\t\tclassName={classes.textArea}\n// \t\t\t\t\tonChange={handlChange}\n// \t\t\t\t\tvalue={value}\n// \t\t\t\t/>\n// \t\t\t\t<TextareaAutosize\n// \t\t\t\t\tclassName={classes.textArea}\n// \t\t\t\t\tonChange={handleChange}\n// \t\t\t\t\tvalue={value}\n// \t\t\t\t\tstyle={{ height: '530px' }}\n// \t\t\t\t/>\n// \t\t\t</form>\n// \t\t</section>\n// \t);\n// };\n\n// export default TextArea;\n\nimport { useContext, useState } from 'react';\nimport { useTextAreaStyles } from './styles';\nimport { ThemeContext } from '../../App';\nimport { TextareaAutosize } from '@material-ui/core';\n\ninterface TextAreaProps {\n\tlabel: string;\n\tonChange: (event: React.ChangeEvent<HTMLTextAreaElement>) => void;\n\tvalue: string;\n}\n\nconst TextArea = ({ label, onChange, value }: TextAreaProps) => {\n\tconst classes = useTextAreaStyles();\n\tconst theme = useContext(ThemeContext);\n\n\treturn (\n\t\t<section className={classes.root}>\n\t\t\t{label && <label>{label}</label>}\n\t\t\t<form>\n\t\t\t\t<TextareaAutosize\n\t\t\t\t\tclassName={classes.textArea}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\tvalue={value}\n\t\t\t\t/>\n\t\t\t</form>\n\t\t</section>\n\t);\n};\n\nexport default TextArea;\n"],"mappings":";;;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,SAASA,UAAT,QAAqC,OAArC;AACA,SAASC,iBAAT,QAAkC,UAAlC;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,gBAAT,QAAiC,mBAAjC;;;AAQA,MAAMC,QAAQ,GAAG,QAA+C;EAAA;;EAAA,IAA9C;IAAEC,KAAF;IAASC,QAAT;IAAmBC;EAAnB,CAA8C;EAC/D,MAAMC,OAAO,GAAGP,iBAAiB,EAAjC;EACA,MAAMQ,KAAK,GAAGT,UAAU,CAACE,YAAD,CAAxB;EAEA,oBACC;IAAS,SAAS,EAAEM,OAAO,CAACE,IAA5B;IAAA,WACEL,KAAK,iBAAI;MAAA,UAAQA;IAAR;MAAA;MAAA;MAAA;IAAA,QADX,eAEC;MAAA,uBACC,QAAC,gBAAD;QACC,SAAS,EAAEG,OAAO,CAACG,QADpB;QAEC,QAAQ,EAAEL,QAFX;QAGC,KAAK,EAAEC;MAHR;QAAA;QAAA;QAAA;MAAA;IADD;MAAA;MAAA;MAAA;IAAA,QAFD;EAAA;IAAA;IAAA;IAAA;EAAA,QADD;AAYA,CAhBD;;GAAMH,Q;UACWH,iB;;;KADXG,Q;AAkBN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}