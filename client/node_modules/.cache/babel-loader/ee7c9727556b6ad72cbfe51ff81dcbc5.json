{"ast":null,"code":"var _jsxFileName = \"/Users/emmanuel/my-portfolio/client/src/contexts/ThemeToggle.tsx\",\n    _s = $RefreshSig$();\n\n/** @format */\nimport { useContext } from 'react';\nimport DarkModeIcon from '@mui/icons-material/DarkMode';\nimport { ThemeContext } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ThemeToggle = () => {\n  _s();\n\n  const {\n    theme,\n    setTheme\n  } = useContext(ThemeContext);\n\n  const handleThemeToggle = () => {\n    setTheme(theme === 'light' ? 'dark' : 'light');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(DarkModeIcon, {\n      onClick: handleThemeToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ThemeToggle, \"CrVyfxkbaVKs8B1q77aq0EAdMEo=\");\n\n_c = ThemeToggle;\nexport default ThemeToggle;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeToggle\");","map":{"version":3,"names":["useContext","DarkModeIcon","ThemeContext","ThemeToggle","theme","setTheme","handleThemeToggle"],"sources":["/Users/emmanuel/my-portfolio/client/src/contexts/ThemeToggle.tsx"],"sourcesContent":["/** @format */\n\nimport { useContext } from 'react';\nimport DarkModeIcon from '@mui/icons-material/DarkMode';\nimport { ThemeContext } from '../App';\n\nconst ThemeToggle = () => {\n\tconst { theme, setTheme } = useContext(ThemeContext);\n\n\tconst handleThemeToggle = () => {\n\t\tsetTheme(theme === 'light' ? 'dark' : 'light');\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t{/* {value === 'light' ? (\n                <DarkModeIcon\n                    style={{\n                        background: 'black',\n                        color: 'white',\n                        borderRadius: '50%',\n                        width: '30px',\n                        fontSize: '30px',\n                    }}\n                    onClick={() => {\n                        handleSetValue('dark'); // Update theme to dark first\n                        document.body.className = 'dark'; // Then update body class\n                    }}\n                />\n            ) : (\n                <DarkModeIcon\n                    style={{\n                        background: 'white',\n                        color: 'black',\n                        borderRadius: '50%',\n                        width: '30px',\n                        fontSize: '30px',\n                    }}\n                    onClick={() => {\n                        handleSetValue('light'); // Update theme to light first\n                        document.body.className = 'light'; // Then update body class\n                    }}\n                />\n\n            )} */}\n\n\t\t\t<DarkModeIcon onClick={handleThemeToggle} />\n\t\t</div>\n\t);\n};\n\nexport default ThemeToggle;\n"],"mappings":";;;AAAA;AAEA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAASC,YAAT,QAA6B,QAA7B;;;AAEA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACzB,MAAM;IAAEC,KAAF;IAASC;EAAT,IAAsBL,UAAU,CAACE,YAAD,CAAtC;;EAEA,MAAMI,iBAAiB,GAAG,MAAM;IAC/BD,QAAQ,CAACD,KAAK,KAAK,OAAV,GAAoB,MAApB,GAA6B,OAA9B,CAAR;EACA,CAFD;;EAIA,oBACC;IAAA,uBAgCC,QAAC,YAAD;MAAc,OAAO,EAAEE;IAAvB;MAAA;MAAA;MAAA;IAAA;EAhCD;IAAA;IAAA;IAAA;EAAA,QADD;AAoCA,CA3CD;;GAAMH,W;;KAAAA,W;AA6CN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}